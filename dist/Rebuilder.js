import{BufferBuilder as e}from"@triforce-heroes/triforce-core/BufferBuilder";import{deflate as t}from"pako";export function rebuild(n,i=1){let r=new e,f=new e;for(let[g,l]of(f.write(16),Object.entries(n))){let[,n,s]=g.slice(0,-5).split("_"),w=Buffer.from(t(l,{level:i}));if(w.length>=l.length){r.writeUnsignedInt32(f.length),r.write(4),r.writeUnsignedInt32(l.length),r.write(4),r.writeUnsignedInt32(l.length),r.write(12),r.push(Buffer.from(n,"hex"),Buffer.from(s,"hex")),f.push(l),f.pad(16);continue}let d=new e;d.writeUnsignedInt32(65536),d.writeUnsignedInt32(1),d.writeUnsignedInt32(l.length),d.writeUnsignedInt32(w.length+4),d.pad(128),d.writeUnsignedInt32(w.length),d.push(w),d.pad(128),r.writeUnsignedInt32(f.length),r.write(4),r.writeUnsignedInt32(l.length),r.write(4),r.writeUnsignedInt32(d.length),r.write(4),r.writeUnsignedInt32(1),r.write(4),r.push(Buffer.from(n,"hex"),Buffer.from(s,"hex")),f.push(d.build())}return{indexes:r.build(),blocks:f.build()}}