import{readFileSync as e}from"node:fs";import{join as t}from"node:path";import{deflateSync as r}from"node:zlib";import{BufferBuilder as n}from"@triforce-heroes/triforce-core/BufferBuilder";function f(e,t,r,n,f,i){let l=Buffer.alloc(32);return l.writeUInt32LE(e,0),l.writeUInt32LE(t,8),l.writeUInt32LE(r,16),l.writeUInt8(Number(n),24),Buffer.concat([l,f,i])}export function processEntries(i,l){let o=[],u=[],h=Object.groupBy(l,e=>Number(e.slice(0,4))),s=16;for(let[l,c]of Object.entries(h)){let h=c.at(0);h.length>26?function(i,l,o,u,h,s,c){let[,g,m]=s.slice(0,-5).split("_"),p=0,d=[],w=[];for(let f of c){let i=new n,l=e(t(u,f));if(f.includes("_raw"))w.push(l.length),i.push(l),p+=l.length;else{let e=r(l);w.push(e.length+4),i.writeUnsignedInt32(e.length),i.push(Buffer.from(e)),p+=l.length}i.pad(128),d.push(i.build())}let B=new n;for(let e of(B.writeUnsignedInt16(0),B.writeUnsignedInt16(s.includes("_01_")?1:2),B.writeUnsignedInt32(c.length),B.writeUnsignedInt32(p),w))B.writeUnsignedInt32(e);B.pad(128);let b=B.build(),I=Buffer.concat(d);return l[h]=f(i,p,b.length+I.length,!0,Buffer.from(g,"hex"),Buffer.from(m,"hex")),o[h]=Buffer.concat([b,I]),o[h].length}(s,o,u,i,Number(l),h,c):function(r,n,i,l,o,u){let[,h,s]=u.slice(0,-5).split("_"),c=e(t(l,u));return n[o]=f(r,c.length,c.length,!1,Buffer.from(h,"hex"),Buffer.from(s,"hex")),i[o]=c,c.length}(s,o,u,i,Number(l),h),s+=u[Number(l)].length}return{indexes:o,datas:u}}